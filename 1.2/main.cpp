#include <iostream>

#include "direct_solution.h"

int main() {

    /* ВАЖНО! В условии задачи не формулировалось,
     * что подразумевать под "возможными полями",
     * так что я принял под этим выражением число
     * тех полей, которые могут быть достигнуты
     * в течение "тупой" игры обоих игроков.
     *
     * Пояснение:
     * 1. Никакой игрок не играет "лучше"
     * или "хуже" в зависимости от положения
     * на поле
     *
     * 2. Перебираются все возможные положения
     * даже те, которые при РАЗУМНОЙ игре будут
     * недостижимы. Пример:
     * | x - x |    | x - x |
     * | 0 0 - | -> | 0 0 x |
     * | - - - |    | - - - |
     *    (1)          (2)
     * (игрок вместо того, чтобы поставить
     * x и выиграть, поставил в другое место
     * и игра продолжается - такое поведение
     * решение тоже учитывает и записывает
     * поле 2 в число возможных полей)
     * */

    /* Лобовое решение задачи: просто спускаемся
     * рекурсивно по дереву возможных ходов. То
     * есть из начальной позиции у нас будет 9
     * рекурсивных вызовов: на каждое возможное
     * место постановки крестика первым человеком.
     * */
    std::cout << dsol() << std::endl;
    return 0;
}